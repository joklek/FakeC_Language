int main() {
    2;
    true;
    1.2;
    output << "\\ Welcome to \"my program\" \n\t  \\\\\\ye ";
    return 0;
}

/*
 * Method has ifs with blocks, statements.
 *            else if with blocks, statements.
 *            else with blocks and statements.
 * also featuring expressions and, constants and variables in conditions
*/
bool ifs(int a, int b, int c, bool d) {
    if (a == b - 1) {
        if ( a==c) {return false;}
    }
    else if ( true) {
        if (false) {}
        else if (true) {}
        else {return false;}
    }
    else {
        c = a;
        d = b == d AND true OR false;
        return !d;
    }
}

float loops(float _ye) {
    _ye = 0.0;
    float toAdd = 1.0;
    while (_ye != 100.0) {
        _ye = _ye + toAdd;
        if (_ye == 50.0 ) {
            _ye = 2.0;
        }
        if(_ye==51.0){
            break;
        }
        else if (_ye == 53.0) {
            continue;
        }
    }
    return 0.1;
}

float floats (float _1) {
    _1 = -.01;
    _1 = _1 * 10.0 / 15.5 + .2 * 10.0 - 99.9;
    return _1;
}

int ints() {
    return 1 + 2 *4 + -1;
}

char chars() {
    char a = 4   + '\'';
    char b = 5.0 + '\\';
    int c = '5' - '0';
    return a;
}


char[] arrays(int[] intArray, int size) {
    char[] newArray[size];
    int[] copyOfArray = intArray;

    for(int i = 0; i < size; i += 3) {
        newArray[i] = copyOfArray[i];
    }
    return newArray;
}


bool dividesByTwo(int number) {
    int a;
    float _b = .314 * 10.0 / 1000.0 + 0.0;
    bool c3 = false;

    output << "please enter a number or the program will crash: ";
    input >> a;

    while (a != 6) {
        a = a+1;
        if (a == 100) {
            break;
        }
        else if (a == 99) {
            continue;
        }
        output << a, "\n";
    }

    ifs(true, 4);

    return number % 2 == 0;
}

bool logicalOperators() {
    return true AND (false OR true);
}

string emptyStrings() {
    return "";
}